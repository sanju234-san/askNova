import streamlit as st
import tempfile
from gtts import gTTS
from textblob import TextBlob

st.set_page_config(page_title="AskNova AI Chat", page_icon="🤖")
st.title("🧠 AskNova - AI Chat Assistant (Free API Version)")
st.write("Type your message below. AskNova will reply and read it aloud!")

user_input = st.text_input("You:", key="user_input")

tone_option = st.selectbox(
    "Select the tone/emoji for the response:",
    ["Cheerful", "Excited", "Calm", "Sarcastic", "Neutral", "Empathetic"]
)

# 🔁 Rule-based local chatbot logic (replaceable with AI API)
def local_bot_logic(text):
    text = text.lower()
    if "hello" in text or "hi" in text:
        return "Hello! How can I assist you today?"
    elif "how are you" in text:
        return "I'm just a bot, but I'm functioning at full capacity!"
    elif "your name" in text:
        return "I'm AskNova, your friendly AI assistant!"
    elif "bye" in text or "goodbye" in text:
        return "Goodbye! Talk to you soon."
    else:
        return "Hmm, I didn't get that. Can you please rephrase?"

# 👇 Optional tone emojis
tone_emoji = {
    "Cheerful": "😊",
    "Excited": "😃",
    "Calm": "😌",
    "Sarcastic": "🙄",
    "Empathetic": "😔",
    "Neutral": "😐"
}

if st.button("Send"):
    if not user_input.strip():
        st.warning("Please enter a message.")
    else:
        sentiment = TextBlob(user_input).sentiment.polarity
        emoji = tone_emoji[tone_option]

        # Get bot's response
        bot_message = local_bot_logic(user_input)

        # Add sentiment-based prefix
        if sentiment > 0:
            bot_message = f"That's great! {bot_message}"
        elif sentiment < 0:
            bot_message = f"I'm really sorry to hear that. {bot_message}"
        else:
            bot_message = f"Okay, here's what I think: {bot_message}"

        st.markdown(f"**AskNova {emoji}:** {bot_message}")

        # Convert bot response to audio using gTTS
        tts = gTTS(bot_message)
        with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmpfile:
            tts.save(tmpfile.name)
            st.audio(tmpfile.name, format='audio/mp3')
