import streamlit as st
import os
import tempfile
from ibm_watson import TextToSpeechV1, AssistantV1
from ibm_cloud_sdk_core.authenticators import IAMAuthenticator

# === Set up credentials ===
tts_api_key = 'jgrAfEhKei2MLssxHGyPwW4uroLBf1LV9ckX6leiU9b1'
tts_url = 'https://api.us-south.text-to-speech.watson.cloud.ibm.com/instances/3d2f4748-4b26-4d25-9a17-690ebd52a8ce'

assistant_api_key = 'VJgrplKKAv5h-MUHM9O8P8LwUtCoVBfbGd7HGoaKMLo3'
assistant_url = 'https://api.us-south.assistant.watson.cloud.ibm.com'
workspace_id = '3fff36d2-a858-4822-b5ad-c31e280266f1'  # <-- Use your Dialog Skill ID here

# === Setup TTS ===
tts_auth = IAMAuthenticator(tts_api_key)
tts = TextToSpeechV1(authenticator=tts_auth)
tts.set_service_url(tts_url)

# === Setup Assistant V1 ===
assistant_auth = IAMAuthenticator(assistant_api_key)
assistant = AssistantV1(version='2021-06-14', authenticator=assistant_auth)
assistant.set_service_url(assistant_url)

# === Streamlit UI ===
st.set_page_config(page_title="AskNova AI Chat", page_icon="ðŸ¤–")
st.title("ðŸ§  AskNova - AI Chat Assistant")
st.write("Type your message below. AskNova will reply and read it aloud!")

user_input = st.text_input("You:", key="user_input")

if st.button("Send"):
    if not user_input.strip():
        st.warning("Please enter a message.")
    else:
        # === Get response from Watson Assistant V1 (Dialog Skill) ===
        response = assistant.message(
            workspace_id=workspace_id,
            input={'text': user_input}
        ).get_result()

        try:
            bot_message = response['output']['text'][0]
        except Exception as e:
            bot_message = "Oops! I didn't get that."

        st.markdown(f"**AskNova:** {bot_message}")

        # === Convert response to speech ===
        with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as tmpfile:
            tmpfile.write(
                tts.synthesize(
                    bot_message,
                    voice='en-US_AllisonV3Voice',
                    accept='audio/wav'
                ).get_result().content
            )
            st.audio(tmpfile.name, format='audio/wav')
